name: CI Pipeline

on:
  push:
    branches:
      - '**'   # This will run on any branch
    paths:
      - "code/frontend/**"
      - "code/backend/**"
      - "code/ai-service/fast-api/**"
      - "code/ai-service/flask-api/**"
      - "tests/**"
  pull_request:
    branches:
      - '**'   # Run on PRs from any branch

jobs:
  # Job 1: Lint and Test React Frontend
  frontend:
    name: React Frontend Linting and Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          cd code/frontend
          npm install

      - name: Install ESLint
        run: |
          cd code/frontend
          npm install eslint eslint-plugin-react eslint-plugin-react-hooks --save-dev

      - name: Lint React code
        run: |
          cd code/frontend
          npx eslint . --fix || true

      - name: Run React Unit Tests
        run: |
          cd code/frontend
          npm test

  # Job 2: Build and Test AI Service (FastAPI)
  python-ai-service-fastapi:
    name: Python AI Service (FastAPI) Linting and Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          cd code/ai-service/fast-api
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install pytest
          pip install flake8  # Explicitly install flake8 if not in requirements.txt

      - name: Lint Python code
        run: |
          cd code/ai-service/fast-api
          source venv/bin/activate
          flake8 . || true

      - name: Run Python Unit Tests
        run: |
          cd code/ai-service/fast-api
          source venv/bin/activate
          pytest || true

  # Job 3: Build and Test Backend (Spring Boot)
  backend:
    name: Spring Boot Backend Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: chatbot_db
          POSTGRES_USER: groupone
          POSTGRES_PASSWORD: groupOneRocks

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Build Backend
        run: |
          cd code/backend/course-builder-chatbot-ms
          ./mvnw clean install

      - name: Run Backend Tests
        run: |
          cd code/backend/course-builder-chatbot-ms
          ./mvnw test
