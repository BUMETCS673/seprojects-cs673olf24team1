[{"state":{"code":"classDiagram\n    %% Entities\n    class User {\n        +userID : String\n        +name : String\n        +email : String\n        +program : String\n        +careerGoal : String\n        +coursesTaken : List<Course>\n    }\n\n    class Course {\n        +courseID : String\n        +courseName : String\n        +category : String\n        +difficultyLevel : String\n        +workloadLevel : String\n        +isPrerequisite : Boolean\n        +isActive : Boolean\n        +courseDescription : String\n        +credit : int\n        +department : String\n        +prerequisite : List<Course>\n    }\n\n    class CoursePlan {\n        +planID : String\n        +courseList : List<Course>\n        +semester : String\n        +totalCourses : int\n        +graduationGoal : String\n        +courseThisSemester : int\n        +status : String\n    }\n\n    class ChatHistory {\n        +sessionID : String\n        +userID : String\n        +conversationData : JSON\n        +timestamp : Date\n    }\n\n    %% Relationships between Entities\n    User \"1\" --> \"many\" CoursePlan : owns\n    CoursePlan \"many\" --> \"many\" Course : includes\n    User \"1\" --> \"many\" ChatHistory : has\n    Course \"many\" --> \"many\" Course : prerequisites\n\n    %% Control classes\n    class CourseController {\n        +retrieveCourses(User)\n        +filterCourses()\n        +recommendCourses(User)\n    }\n\n    class CoursePlanController {\n        +createCoursePlan(User)\n        +saveCoursePlan(CoursePlan)\n        +modifyCoursePlan(CoursePlan)\n        +finalizeCoursePlan(CoursePlan)\n    }\n\n    class ChatController {\n        +manageConversationFlow()\n        +cacheChatHistory(ChatHistory)\n        +downloadChatHistory(User)\n    }\n\n    class UserController {\n        +loginUser(User)\n        +manageSession()\n        +updateCareerGoal(User)\n    }\n\n    %% Boundary classes\n    class ChatbotInterface {\n        +interactWithUser()\n        +connectToControllers()\n    }\n\n    class UserLoginInterface {\n        +authenticateUser(User)\n    }\n\n    class CourseSelectionInterface {\n        +displayCourseOptions()\n        +modifyCourses(User)\n    }\n\n    class CoursePlanInterface {\n        +buildCoursePlan(User)\n        +saveCoursePlan(User)\n        +showGraduationGoal(User)\n    }\n\n    %% Connections between Control and Entities\n    CourseController --> Course : interacts\n    CoursePlanController --> CoursePlan : manages\n    ChatController --> ChatHistory : handles\n    UserController --> User : manages\n\n    %% Relationships between boundary and control classes\n    ChatbotInterface --> CourseController : \"retrieves course data\"\n    ChatbotInterface --> CoursePlanController : \"manages course plans\"\n    ChatbotInterface --> ChatController : \"handles chat and downloads\"\n    UserLoginInterface --> UserController : \"handles login and sessions\"\n    CourseSelectionInterface --> CourseController : \"selects and filters courses\"\n    CoursePlanInterface --> CoursePlanController : \"builds and saves course plan\"\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false,"editorMode":"code"},"time":1726476777011,"type":"auto","id":"da3e506d-63fa-4a38-9400-d4a21486310f","name":"kind-farmer"},{"state":{"code":"classDiagram\n    %% Entities\n    class User {\n        +userID : String\n        +name : String\n        +email : String\n        +program : String\n        +careerGoal : String\n        +coursesTaken : List<Course>\n    }\n\n    class Course {\n        +courseID : String\n        +courseName : String\n        +category : String\n        +difficultyLevel : String\n        +workloadLevel : String\n        +isPrerequisite : Boolean\n        +isActive : Boolean\n        +courseDescription : String\n        +credit : int\n        +department : String\n        +prerequisite : List<Course>\n    }\n\n    class CoursePlan {\n        +planID : String\n        +courseList : List<Course>\n        +semester : String\n        +totalCourses : int\n        +graduationGoal : String\n        +courseThisSemester : int\n        +status : String\n    }\n\n    class ChatHistory {\n        +sessionID : String\n        +userID : String\n        +conversationData : JSON\n        +timestamp : Date\n    }\n\n    %% Relationships between Entities\n    User \"1\" --> \"many\" CoursePlan : owns\n    CoursePlan \"many\" --> \"many\" Course : includes\n    User \"1\" --> \"many\" ChatHistory : has\n    Course \"many\" --> \"many\" Course : prerequisites\n\n    %% Control classes\n    class CourseController {\n        +retrieveCourses(User)\n        +filterCourses()\n        +recommendCourses(User)\n    }\n\n    class CoursePlanController {\n        +createCoursePlan(User)\n        +saveCoursePlan(CoursePlan)\n        +modifyCoursePlan(CoursePlan)\n        +finalizeCoursePlan(CoursePlan)\n    }\n\n    class ChatController {\n        +manageConversationFlow()\n        +cacheChatHistory(ChatHistory)\n        +downloadChatHistory(User)\n    }\n\n    class UserController {\n        +loginUser(User)\n        +manageSession()\n        +updateCareerGoal(User)\n    }\n\n    %% Boundary classes\n    class ChatbotInterface {\n        +interactWithUser()\n        +connectToControllers()\n    }\n\n    class UserLoginInterface {\n        +authenticateUser(User)\n    }\n\n    class CourseSelectionInterface {\n        +displayCourseOptions()\n        +modifyCourses(User)\n    }\n\n    class CoursePlanInterface {\n        +buildCoursePlan(User)\n        +saveCoursePlan(User)\n        +showGraduationGoal(User)\n    }\n\n    %% Relationships between boundary and control classes\n    ChatbotInterface --> CourseController : \"retrieves course data\"\n    ChatbotInterface --> CoursePlanController : \"manages course plans\"\n    ChatbotInterface --> ChatController : \"handles chat and downloads\"\n    UserLoginInterface --> UserController : \"handles login and sessions\"\n    CourseSelectionInterface --> CourseController : \"selects and filters courses\"\n    CoursePlanInterface --> CoursePlanController : \"builds and saves course plan\"\n","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":false},"time":1726476717120,"type":"auto","id":"bdbc1831-667a-4b7d-b38a-d9f8881de68e","name":"best-winter"},{"state":{"code":"classDiagram\n    class User {\n        +userID : String\n        +name : String\n        +email : String\n        +program : String\n        +careerGoal : String\n        +coursesTaken : List<Course>\n    }\n\n    class Course {\n        +courseID : String\n        +courseName : String\n        +category : String\n        +difficultyLevel : String\n        +workloadLevel : String\n        +isPrerequisite : Boolean\n        +isActive : Boolean\n        +courseDescription : String\n        +credit : int\n        +department : String\n        +prerequisite : List<Course>\n    }\n\n    class CoursePlan {\n        +planID : String\n        +courseList : List<Course>\n        +semester : String\n        +totalCourses : int\n        +graduationGoal : String\n        +courseThisSemester : int\n        +status : String\n    }\n\n    class ChatHistory {\n        +sessionID : String\n        +userID : String\n        +conversationData : String\n        +timestamp : Date\n    }\n\n    %% Relationships between entities\n    User \"1\" --> \"many\" CoursePlan : owns\n    CoursePlan \"many\" --> \"many\" Course : includes\n    User \"1\" --> \"many\" ChatHistory : has\n    Course \"many\" --> \"many\" Course : prerequisites\n\n    %% Control classes\n    class CourseController\n    class CoursePlanController\n    class ChatController\n    class UserController\n\n    %% Boundary classes\n    class ChatbotInterface\n    class UserLoginInterface\n    class CourseSelectionInterface\n    class CoursePlanInterface\n\n    %% Relationships between boundary and control classes\n    ChatbotInterface --> CourseController : \"retrieves course data\"\n    ChatbotInterface --> CoursePlanController : \"manages course plans\"\n    ChatbotInterface --> ChatController : \"handles chat and downloads\"\n    UserLoginInterface --> UserController : \"handles login and sessions\"\n    CourseSelectionInterface --> CourseController : \"selects and filters courses\"\n    CoursePlanInterface --> CoursePlanController : \"builds and saves course plan\"\n\n  ","mermaid":"{\n  \"theme\": \"default\"\n}","autoSync":true,"rough":false,"updateDiagram":true},"time":1726476597145,"type":"auto","id":"f2e9a8a2-fb94-4567-8bcd-7b7c90f18012","name":"dazzling-scooter"}]